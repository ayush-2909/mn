
Step 1: Prepare the routers for the lab.
Cable the network as shown in the topology diagram. Erase the startup configuration and reload each router
to clear previous configurations.
Step 2: Configure the hostname and interface addresses.
a. You can copy and paste the following configurations into your routers to begin.
Router R1 (hostname SanJose)
hostname SanJose
!
interface Loopback0
ip address 10.1.1.1 255.255.255.0
!
interface Serial0/0/0
ip address 192.168.1.5 255.255.255.252
clock rate 128000
no shutdown
Router R2 (hostname ISP)
hostname ISP
!
interface Loopback0
ip address 10.2.2.1 255.255.255.0
!
interface Serial0/0/0
ip address 192.168.1.6 255.255.255.252
no shutdown
!
interface Serial0/0/1
ip address 172.24.1.17 255.255.255.252
clock rate 128000
no shutdown
Router R3 (hostname CustRtr)
hostname CustRtr
!
interface Loopback0
ip address 10.3.3.1 255.255.255.0
!
interface Serial0/0/1
ip address 172.24.1.18 255.255.255.252
no shutdown

b. Use ping to test the connectivity between the directly connected routers.

Step 3: Configure BGP.
a. Configure BGP for normal operation. Enter the appropriate BGP commands on each router so that they
identify their BGP neighbors and advertise their loopback networks.
SanJose(config)# router bgp 100
SanJose(config-router)# neighbor 192.168.1.6 remote-as 300
SanJose(config-router)# network 10.1.1.0 mask 255.255.255.0
ISP(config)# router bgp 300
ISP(config-router)# neighbor 192.168.1.5 remote-as 100
ISP(config-router)# neighbor 172.24.1.18 remote-as 65000
ISP(config-router)# network 10.2.2.0 mask 255.255.255.0
CustRtr(config)# router bgp 65000
CustRtr(config-router)# neighbor 172.24.1.17 remote-as 300
CustRtr(config-router)# network 10.3.3.0 mask 255.255.255.0

b. Verify that these routers have established the appropriate neighbor relationships by issuing the show ip
bgp neighbors command on each router.
ISP# show ip bgp neighbors


Step 4: Remove the private AS.
a. Display the SanJose routing table using the show ip route command. SanJose should have a route to
both 10.2.2.0 and 10.3.3.0. Troubleshoot if necessary.
SanJose# show ip route
SanJose# ping 10.3.3.1 source 10.1.1.1
or
SanJose# ping 10.3.3.1 source Lo0

d. Check the BGP table from SanJose by using the show ip bgp command. Note the AS path for the
10.3.3.0 network. The AS 65000 should be listed in the path to 10.3.3.0.
SanJose# show ip bgp

e. Configure ISP to strip the private AS numbers from BGP routes exchanged with SanJose using the
following commands.
ISP(config)# router bgp 300

ISP(config-router)# neighbor 192.168.1.5 remove-private-as
SanJose# ping 10.3.3.1 source lo0

g. Now check the BGP table on SanJose. The AS_ PATH to the 10.3.3.0 network should be AS 300. It no
longer has the private AS in the path.
SanJose# show ip bgp

Step 5: Use the AS_PATH attribute to filter routes.
a. Configure a special kind of access list to match BGP routes with an AS_PATH attribute that both begins
and ends with the number 100. Enter the following commands on ISP.
ISP(config)# ip as-path access-list 1 deny ^100$
ISP(config)# ip as-path access-list 1 permit .*
b. Apply the configured access list using the neighbor command with the filter-list option.
ISP(config)# router bgp 300
ISP(config-router)# neighbor 172.24.1.18 filter-list 1 out
c. Use the clear ip bgp * command to reset the routing information. Wait several seconds and then check
the routing table for ISP. The route to 10.1.1.0 should be in the routing table.
ISP# show ip route

d. Check the routing table for CustRtr. It should not have a route to 10.1.1.0 in its routing table.
CustRtr# show ip route
e. Return to ISP and verify that the filter is working as intended. Issue the show ip bgp regexp ^100$
command.
ISP# show ip bgp regexp ^100$

ISP# tclsh
foreach address {
10.1.1.1
10.2.2.1
10.3.3.1
192.168.1.5
192.168.1.6
172.24.1.17
172.24.1.18
} {
ping $address }



